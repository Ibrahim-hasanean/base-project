"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const auth_controller_1 = require("../controllers/auth-controller");
const validationMiddleware_1 = require("../middleware/validationMiddleware");
const AuthValidator_1 = require("../utils/validators/AuthValidator");
const uploadFiles_1 = require("../middleware/uploadFiles");
const authRouter = (0, express_1.Router)();
authRouter.post("/signup", uploadFiles_1.upload.single("image"), (0, validationMiddleware_1.validateData)(AuthValidator_1.signUpValidator), auth_controller_1.AuthController.signup);
authRouter.post("/signin", (0, validationMiddleware_1.validateData)(AuthValidator_1.signInValidator), auth_controller_1.AuthController.signIn);
authRouter.post("/signout", auth_controller_1.AuthController.protect, auth_controller_1.AuthController.signOut);
// authRouter.post("/refreshToken", AuthController.refreshToken);
authRouter.post("/forgotPassword", (0, validationMiddleware_1.validateData)(AuthValidator_1.forgetPasswordValidator), auth_controller_1.AuthController.forgotPassword);
authRouter.post("/verifyResetCode", (0, validationMiddleware_1.validateData)(AuthValidator_1.verifyForgetPasswordValidator), auth_controller_1.AuthController.verifyPassResetCode);
authRouter.put("/resetPassword", (0, validationMiddleware_1.validateData)(AuthValidator_1.resetPasswordValidator), auth_controller_1.AuthController.resetPassword);
authRouter.post("/google/signup", (0, validationMiddleware_1.validateData)(AuthValidator_1.socialMediaAuthValidator), auth_controller_1.AuthController.googleAuthSignUp);
authRouter.post("/google/signin", (0, validationMiddleware_1.validateData)(AuthValidator_1.socialMediaAuthValidator), auth_controller_1.AuthController.googleAuthSignIn);
authRouter.post("/facebook/signup", (0, validationMiddleware_1.validateData)(AuthValidator_1.socialMediaAuthValidator), auth_controller_1.AuthController.facebookAuthSignUp);
authRouter.post("/facebook/signin", (0, validationMiddleware_1.validateData)(AuthValidator_1.socialMediaAuthValidator), auth_controller_1.AuthController.facebookAuthSignIn);
authRouter.post("/twitter/signup", (0, validationMiddleware_1.validateData)(AuthValidator_1.twitterAuthValidator), auth_controller_1.AuthController.twitterAuthSignUp);
authRouter.post("/resend-verification-email", (0, validationMiddleware_1.validateData)(AuthValidator_1.forgetPasswordValidator), auth_controller_1.AuthController.resendVerifyCode);
authRouter.post("/verify-email", (0, validationMiddleware_1.validateData)(AuthValidator_1.verifyEmailValidator), auth_controller_1.AuthController.verifyUserEmail);
authRouter.post("/twitter/signin", (0, validationMiddleware_1.validateData)(AuthValidator_1.twitterAuthValidator), auth_controller_1.AuthController.twitterAuthSignIn);
exports.default = authRouter;
